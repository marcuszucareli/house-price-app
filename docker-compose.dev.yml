services:
  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    env_file:
      - ./api/.env.dev
    volumes:
      - ./api:/service/api
      - ./database:/service/database
      - ./tests/api:/service/tests/api
      - ./tests/database:/service/tests/database
      - ./tests/data:/service/tests/data
      - ./tests/conftest.py:/service/tests/conftest.py
      - ./tmp:/service/tmp
    ports:
      - "8000:8000"
    networks:
      - app-network
    command: sh -c "python -m database.init_db && uvicorn api.api:app --host 0.0.0.0 --port 8000 --reload"

  app:
    build:
      context: .
      dockerfile: ./app/Dockerfile
      args:
          APP_ENV: dev
    depends_on:
      - api
    env_file:
      - ./app/.env.dev
    volumes:
      - ./app:/service/app
      - ./tmp:/service/tmp
    ports:
      - "8080:8080"
    networks:
      - app-network
    command: streamlit run ./app/main.py --server.port=8080 --server.address=0.0.0.0

  mlflow_client:
    build:
      context: .
      dockerfile: ./mlflow_client/Dockerfile
    env_file:
      - ./mlflow_client/.env.dev
    volumes:
      - ./mlflow_client:/service/mlflow_client
      - ./database:/service/database
      - ./tests/mlflow_client:/service/tests/mlflow_client
      - ./tests/database:/service/tests/database
      - ./model_development:/service/model_development
      - ./tests/data:/service/tests/data
      - ./tests/conftest.py:/service/tests/conftest.py
      - ./examples:/service/examples
      - ./tmp/:/service/tmp
    ports:
      - "5000:5000"
    networks:
      - app-network
    command: sleep infinity

networks:
  app-network:
